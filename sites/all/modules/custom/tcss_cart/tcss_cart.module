<?php

/**
 * Implments hook_theme
 */
function tcss_cart_theme() {
 return array(
  'tcss_cart_image_upload' => array(
    'render element' => 'element',
    ));
}

/**
 * Implments hook_menu
 */
function tcss_cart_menu() {
  $items = array();

  $items['artwork'] = array(
    'title' => 'Your Artwork',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('upload_customer_artwork'),
    'access callback' => TRUE,
    );
  $items['admin/config/search-slider'] = array(
    'title' => 'Search Slider',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tcss_cart_search_slider_form'),
    'access callback' => TRUE,
    );
  return $items;
}

/**
 * Used for configuring background image in serach form
 */
function tcss_cart_search_slider_form() {
  $form = array();
  $product_classes = uc_product_class_load();
  foreach ($product_classes as $key => $value) {
    $form['slider_image_' . $key] = array(
      '#title' => t('Image for ' . $value->name),
      '#type' => 'managed_file',
      '#description' => t('The uploaded image will be shown as background in search form on front page'),
      '#default_value' => variable_get('slider_image_' . $key, ''),
      '#upload_location' => 'public://slider/',
      '#theme' => 'tcss_cart_image_upload',
      );
  }
  return system_settings_form($form);
}

/**
 * Form for uploading customer design
 */
function upload_customer_artwork($form, &$form_state) {
  if (!isset($_SESSION['customer_artwork_pid'])) {
   drupal_set_message(t('Your session has expired, so please again add the product to cart.'), 'error');
   return '';
  }

  $form['customer_upload'] = array(
    '#type' =>'checkbox',
    '#title' => t('Use our Templates'),
  );

  drupal_add_js(drupal_get_path('module', 'tcss_cart') . '/js/customer_artwork.js');
  if (isset($_SESSION['customer_artwork_product'])) {
    $form['customer_artwork_front_side'] = array(
      '#title' => t('Upload Front Side'),
      '#type' => 'managed_file',
      '#upload_location' => 'public://',
      '#theme' => 'tcss_cart_image_upload',
    );
    $form['customer_artwork_back_side'] = array(
      '#title' => t('Upload Back Side'),
      '#type' => 'managed_file',
      '#upload_location' => 'public://',
      '#theme' => 'tcss_cart_image_upload',
    );
  }
  else {
    $form['customer_artwork'] = array(
      '#title' => t('Upload Your Design'),
      '#type' => 'managed_file',
      '#upload_location' => 'public://',
      '#theme' => 'tcss_cart_image_upload',
    );
  }
   $form['customer_artwork_submit'] = array(
  '#type' => 'submit',
  '#value' => 'Submit',
  );
 return $form;
}

/**
 * Submit handler for upload_customer_artwork form
 */
function upload_customer_artwork_submit($form, &$form_state) {
  // Set product and image information to session, used in storing customer's artwork
  if (isset($_SESSION['customer_artwork_pid'])) {
    if ($form_state['values']['customer_upload'] == 0) {
      $_SESSION['customer_upload'][$_SESSION['customer_artwork_pid']] = 0;
      if (isset($form_state['values']['customer_artwork'])) {
        $_SESSION['customer_artwork_fpid'][$_SESSION['customer_artwork_pid']] = $form_state['values']['customer_artwork'];
      }
      elseif (isset($form_state['values']['customer_artwork_front_side'])) {
        $_SESSION['customer_artwork_fpid'][$_SESSION['customer_artwork_pid']][] = $form_state['values']['customer_artwork_front_side'];
        $_SESSION['customer_artwork_fpid'][$_SESSION['customer_artwork_pid']][] = $form_state['values']['customer_artwork_back_side'];
      }
    }
    else {
      $_SESSION['customer_upload'][$_SESSION['customer_artwork_pid']] = 1;
    }
    $form_state['redirect'] = 'cart';
    unset($_SESSION['customer_artwork_pid']);
    unset($_SESSION['customer_artwork_product']);
  }
}

/**
 * Implments hook_form_alter.
 */
function tcss_cart_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == "views_exposed_form" && ($form['#id'] == "views-exposed-form-print-search-business-card" || $form['#id'] == "views-exposed-form-print-search-letterheads" || $form['#id'] == "views-exposed-form-print-search-complimentary-slips" || $form['#id'] == "views-exposed-form-print-search-flyers")) {
    $form['pkg_qty']['#type'] = "select";
    $form['pkg_qty']['#size'] = null;
    $form['pkg_qty']['#options'] = array(
      '' => t('ALL'),
      '100' => t('100'),
      '200' => t('200'),
      '500' => t('500'),
      '2000' => t('2000'),
      '5000' => t('5000'),
      '10000' => t('10000'),
      );
  }
  // Set product information to session, used in storing customer's artwork
  if (strpos($form_id,'uc_product_add_to_cart_form_') !== false) {
    $_SESSION['customer_artwork_pid'] = $form_state['build_info']['args'][0]->nid;
    if ($form_state['build_info']['args'][0]->type == 'business_card') {
      dpm('tk');
      $_SESSION['customer_artwork_product'] = $form_state['build_info']['args'][0]->type;
    }
  }

  if ($form_id == 'compliment_slips_node_form' || $form_id == 'business_card_node_form' || $form_id == 'flyers_node_form' || $form_id == 'letterheads_node_form') {
    $form['base']['prices']['list_price']['#access'] = FALSE;
    $form['base']['prices']['cost']['#access'] = FALSE;
    $form['base']['dimensions']['#access'] = FALSE;
    $form['base']['weight']['#access'] = FALSE;
    $form['base']['shippable']['#access'] = FALSE;
    $form['base']['ordering']['#access'] = FALSE;
  }

  switch ($form_id) {
    case 'uc_cart_view_form':
    // Disable quanitity field in cart view form
    $i = 0;
    while (TRUE) {
      if (isset($form['items'][$i]['qty'])) {
        $form['items'][$i]['qty']['#disabled'] = TRUE;
        $i++;
      }
      else {
        break;
      }
    }
    break;

    case 'uc_order_view_update_form':
      $form['admin_comment_field']['#access'] = FALSE;
    break;
    case 'user_login':
      $form['#attributes']['class'][] = 'default-form';
      break;
   }
}

/**
 * Alter drupal form.
 */
function tcss_cart_form_contact_site_form_alter(&$form, &$form_state, $form_id) {
  $form['#attributes']['class'] = 'default-form';
  $form['name']['#attributes']['placeholder'] = t('Name');
  $form['name']['#title'] = NULL;
  $form['name']['#prefix'] ='<div class="col-sm-6">';
  $form['name']['#suffix'] ='</div>';
  $form['mail']['#attributes']['placeholder'] = t('Email');
  $form['mail']['#title'] = NULL;
  $form['mail']['#prefix'] ='<div class="col-sm-6">';
  $form['mail']['#suffix'] ='</div>';
  $form['subject']['#attributes']['placeholder'] = t('Subject');
  $form['subject']['#title'] = NULL;
  $form['subject']['#prefix'] ='<div class="col-sm-12">';
  $form['subject']['#suffix'] ='</div>';
  $form['cid']['#attributes']['placeholder'] = t('Category');
  $form['cid']['#title'] = NULL;
  $form['cid']['#prefix'] ='<div class="col-sm-12"><span class="select-box" title="Category">';
  $form['cid']['#suffix'] ='</span></div>';
  $form['message']['#weight'] = 2;
  $form['message']['#attributes']['placeholder'] = t('Message');
  $form['message']['#prefix'] ='<div class="col-sm-12">';
  $form['message']['#suffix'] ='</div>';
  $form['message']['#title'] = NULL;
  $form['copy']['#weight']    = 3;
  $form['phone'] = array(
    '#type' => 'textfield',
    '#title' => NULL,
    '#required' => TRUE,
    '#prefix' => '<div class="col-sm-6">',
    '#suffix' => '</div>',
    '#attributes' => array(
      'placeholder' => t('Phone'),
      ),
    '#weight' => 1
    );
  $form['company'] = array(
    '#type' => 'textfield',
    '#title' => NULL,
    '#required' => TRUE,
    '#prefix' => '<div class="col-sm-6">',
    '#suffix' => '</div>',
    '#attributes' => array(
      'placeholder' => t('Company'),
      ),
    '#weight' => 1
    );
}

function theme_tcss_cart_image_upload($variables) {
  $element = $variables['element'];
  if (isset($element['#file']->uri)) {
    $output = '<div id="edit-logo-ajax-wrapper"><div class="form-item form-type-managed-file form-item-logo"><span class="file">';
    $output .= '<img height="50px" src="' . file_create_url($element['#file']->uri) . '" />';
    $output .= '</span><input type="submit" id="edit-' . $element['#name'] . '-remove-button" name="' . $element['#name'] . '_remove_button" value="Remove" class="form-submit ajax-processed">';
    $output .= '<input type="hidden" name="' . $element['#name'] . '[fid]" value="' . $element['#file']->fid . '">';
    return $output;
  }
}


/**
 * Implements hook_uc_product_alter
 */
function tcss_cart_uc_product_alter(&$node){
  // Update product quantity when user add product to his cart
  $node->default_qty = $node->pkg_qty;
}


/**
 * Implements hook_uc_order_product_presave
 */
function tcss_cart_uc_order_product_presave($order_product) {
  $order_product->field_op_seller_id['und'][0]['target_id'] = $order_product->uid;
}


/**
 * Implements hook_uc_cart_checkout_start
 * Need to be changed, should be saved in hook_uc_order
 */
function tcss_cart_uc_cart_checkout_start($order) {
  // Save Product image to database
  if (isset($_SESSION['customer_artwork_fpid']) || isset($_SESSION['customer_upload'])) {
    foreach ($order->products as $id => $product) {
      $order_id = $order->order_id;
      $product_image = new stdClass();
      $product_image->type = 'product_image';
      node_object_prepare($product_image);
      $product_image->language = LANGUAGE_NONE;
      $product_image->field_order_id['und'][]['value'] = $order_id;
      $product_image->field_order_product_id['und'][]['target_id'] = $product->nid;
      if (isset($_SESSION['customer_upload']) && $_SESSION['customer_upload'][$product->nid] == 1) {
        $product_image->field_order_customer_design['und'][] = 20.00;
      }
      else {
        if(is_array($_SESSION['customer_artwork_fpid'][$product->nid])) {
        foreach ($_SESSION['customer_artwork_fpid'][$product->nid] as $fid) {
          $image = (array) file_load($fid);
          if (isset($image['fid'])) {
            $product_image->field_order_prodcut_image['und'][] = $image;
          }
        }
      }
      else {
        $image = (array) file_load($_SESSION['customer_artwork_fpid'][$product->nid]);
        if (isset($image['fid'])) {
          $product_image->field_order_prodcut_image['und'][0] = $image;
        }
      }
      }

      node_save($product_image);
    }
    unset($_SESSION['customer_upload']);
    unset($_SESSION['customer_artwork_fpid']);
  }
}

/**
 * Removes Admin Content from orders view
 */
function tcss_cart_remove_admin_content($order_content) {
  if (isUserSeller()) {
    unset($order_content['admin_comments']);
    unset($order_content['update']['pane']['admin_comment_field']);
  }
  return $order_content;

}

/**
 * Alter items price.
 */
function tcss_cart_calculate_item_price($item) {
  tcss_cart_product_image_load_by_product_id($item->nid);
  $new_price = ($item->qty / $item->default_qty) * ($item->sell_price);

  return $new_price;
}

function tcss_cart_views_pre_render(&$view) {
  if ($view->name == 'seller_order_history') {
    foreach ($view->result as $order_view) {
      $order = uc_order_load($order_view->order_id);
      $order_view->uc_orders_order_total = $order->order_total;
    }
  }
}

function tcss_cart_product_image_load_by_product_id($product_id) {
  $pm_node = FALSE;
  if (isset($_SESSION['cart_order'])) {
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
          ->entityCondition('bundle', 'product_image')
          ->fieldCondition('field_order_product_id', 'target_id', $product_id, '=')
          ->fieldCondition('field_order_id', 'value', $_SESSION['cart_order']);
    $result = $query->execute();
    if (isset($result['node'])) {
      $pm_node = array_keys($result['node'])[0];
      $pm_node = node_load($pm_node);
    }
  }
  return $pm_node;
}
